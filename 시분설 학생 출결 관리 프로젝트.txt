시분설 학생 출석 관리 시스템
 2024.10.13 기본 베이스 작성 
관리자
* 관리자 로그인
    * 관리자 ID와 PW를 통한 로그인
* 학생 기본 정보 등록
    * 학번, 기본 PW, 이름, 주민번호, 입학년도, 이메일, 전화번호 등 기본 정보 등록
        * 관리자가 수동으로 하나씩 학생 정보 등록
        * 학생 정보가 든 엑셀 파일을 불러와서 등록
* 학생 정보 수정
    * 관리자가 등록된 학생의 기본 정보 수정

교수
* 학생 출석 관리
    * 출석 등록
        * 학생 출석 정보 기록
            * 학과-반의 수업 시간표에 따른 수업 별 출석
            * 학생 별 수업 시간표에 따른 출석
    * 출석 기록 수정
        * 학생 사정으로 출석 기록을 수정해야 하는 경우
            * 출결 처리 완료 후 학생 출석 (지각)
            * 결석 처리 완료 후 학생의 사유서 제출 (병결 등)
    * 출석 통계 조회
        * 특정 기간 동안의 출석률, 출석 횟수, 지각 횟수, 결석 횟수 등 통계 확인
    * 출석 기준 설정
        * 수업 별 출석 기준 설정
            * 지각 3회 = 결석 1회
            * 결석 3회 = F 학점
    * 출석 보고서 생성
        * 특정 학생 출석에 대한 보고서 웹에 출력
        * 특정 학생 출석에 대한 보고서 다양한 확장자로 내보내기 ex)excel
    * 출석 기능 
        * 자동 출석 기능
            * 수업 시작 시간에 QR코드를 생성하거나 출석 코드를 생성하여 학생이 QR코드를 찍거나 출석 코드를 입력하면 자동으로 출석 처리
        * 수동 출석 기능
            * 교수님이 학생들의 출석 리스트를 확인하여 직접 호명 후 출석 수동 체크
                * 전체 출석 버튼
                * 출석 상태 분류
                    * 클릭 1번 = 출석, 2번 = 지각, 3번 = 결석, 4번 = 기본값 반복

학생
* 학생 로그인
    * 학번과 비밀번호로 로그인
* 본인 정보 조회 및 수정
    * 개인 정보 조회 : 학번, 이름, 주민번호, 입학년도, 이메일, 전화번호 등 조회
    * 비밀번호 변경 : 본인의 비밀번호 변경
    * 연락처 및 주소 수정 : 이메일, 전화번호, 주소 수정
* 출석 조회
    * 본인의 출석 기록 조회
    * 출석 통계 : 본인의 출석 횟수, 출석률, 지각 및 결석 횟수 조회
    * 출석 이의 신청 : 결석 사유서 제출 또는 교수 실수로 인한 출석 오류 정정 신청 기능

학부모(넣으면 많이 복잡해짐)
* 학부모 정보 등록
    * 받아야 할 정보
        * 성함
        * 연락처
        * 이메일
        * 자녀와의 관계
        * 자녀의 학번 또는 이름
        * 학부모 인증 방법 (이메일 or 휴대폰)
    * 학생 계정을 통해 학부모 이메일 입력
        * 이메일 전송 - 비밀번호 설정 메일 전송
    * 학생 계정을 통해 학부모 이메일 입력
        * 이메일 전송 - 비밀번호 기본 값 전송
        * 이후 부모가 비밀번호 변경
* 자녀의 출석 통계 조회

시스템
* 사용자 권한 관리
    * 관리자와 학생의 권한 차이를 구분
* 로그 관리
    * 관리자 및 학생의 주요 활동 로그 기록
        * 로그인 활동 로그
        * 출석 상태 로그
        * 학생 및 관리자의 정보 수정 로그
* 알림 발송
    * 결석 2회 시 한 번 더 결석 시 F학점 경고 알림
 ——————————————————————————————————————————————————
메뉴 구조

학생
* 로그인 페이지
    * 학번, PW 틀릴 시 다시 입력 오류
* 로그인 후 메인 페이지
    * 정보 수정 페이지 버튼
    * 로그아웃 버튼
    * 출석 조회 페이지 버튼
    * 출석 코드 입력 버튼
* 본인 정보 수정 페이지
    * PW, 이메일, 전화번호 수정
* 출석 조회 페이지
* 출석 코드 입력 페이지

학부모
* 로그인 페이지
    * 학번, PW 틀릴 시 다시 입력 오류
* 로그인 후 메인 페이지
    * 정보 수정 페이지 버튼
    * 로그아웃 버튼
    * 자녀 출석 조회 페이지 버튼
    * 출석 보고서 페이지 버튼
* 정보 수정 페이지
    * 이메일, 전화번호(?), PW 수정
* 자녀 출석 조회 페이지
    * 자녀의 출석 통계 페이지 출력

교수
* 로그인 페이지
    * 학번, PW 틀릴 시 다시 입력 오류
* 로그인 후 메인 페이지
    * 정보 수정 페이지 버튼
    * 로그아웃 버튼
    * 본인 강의 과목 페이지 버튼
* 본인 정보 수정 페이지
    * PW, 이메일, 전화번호 수정
* 정보 수정 페이지
    * 이메일, 전화번호(?), PW 수정
* 본인 강의 과목 페이지
    * 본인 강의 과목 출석 조회 페이지
    * 반 별 학생 리스트 확인 후 특정 학생의 출결 현황 출력
    * 출석 코드 생성 버튼

관리자
* 로그인 페이지
    * 학번, PW 틀릴 시 다시 입력 오류


——————————————————————————————————————————————————
2024.11.13 추가∙수정사항

학생 계정 로그인
* 메인 페이지
    * 현재 출석 현황, 총 출석 현황, 공지사항, 시간표 받아와서 출력(DB)
    * 사이드바의 ㅇㅇ학교 누를 시 메인페이지 이동 구현
    * 스타일 수정(후순위)
* 출석 체크
    * 현재 수업 -> 로그인 학생 계정의 시간표에 맞게 현재 수업 출력(DB)
    * 학생 별 시간표에 따라 오늘의 시간표 수정(DB)
    * 출석 코드 입력 -> 교수가 생성한 출석 코드를 입력할 시 코드가 맞는지 확인 후 출결 처리(DB)
    * 스타일 수정(후순위)
* 출석 보고서 확인
    * 상세 출결 현황 -> 로그인 학생의 출결 현황이 출력되어야 함. 강의명, 학번, 이름, 출결 상태(DB)
    * 전체 출결 현황, 과목별 출결 현황 -> DB 집계 후 recharts?로 렌더링
    * 스타일 수정(후순위)
* 알림 확인
    * 정확히 학생이 무슨 알림을 받는 페이지인가 .(DB)
    * 스타일 수정(후순위)
* 개인정보 관리
    * 비밀번호 수정은 어떻게 해야 할 지
    * 스타일 수정(후순위)
* 공지사항
    * 공지사항 확인(DB)
    * 스타일 수정(후순위)

교수 계정 로그인
* 메인 페이지
    * 공지사항, 교수 강의 시간표로 폼 수정(?)
* 출석 보고서 작성
    * 학생 DB 불러오기(이름, 학번, 이미지)
    * 날짜 기본적으로 오늘 날짜
    * 수업 코드 생성 -> 새로고침 시 코드 변경 x, DB 저장
    * 학생이 코드 입력 시 출석 상태 변경
* 알림 확인
    * 정확히 교수가 무슨 알림을 받는 페이지인가 .(DB)
    * 스타일 수정(후순위)
* 개인정보 관리
    * 비밀번호 수정은 어떻게 해야 할 지
    * 스타일 수정(후순위)
* 공지사항
    * 공지사항 작성, 수정, 확인(DB)
    * 스타일 수정(후순위)
* 출석 관리
    * ?

학부모 계정 로그인
* 메인 페이지
    * 학부모 메인 페이지에는 무엇을 출력해야 할까?
    * 1. 자녀의 시간표
    * 2. 공지사항
    * 그 외 어찌고저찌고
    * 스타일 수정(후순위)
* 출석 보고서 확인
    * 자녀의 출결 현황 확인(부모-자녀 DB 연결)
    * 스타일 수정(후순위)
* 알림 확인
    * 정확히 교수가 무슨 알림을 받는 페이지인가 .(DB)
    * 스타일 수정(후순위)
* 개인정보 관리
    * 비밀번호 수정은 어떻게 해야 할 지
    * 스타일 수정(후순위)
* 공지사항
    * 공지사항 확인(DB)
    * 스타일 수정(후순위)

관리자 계정 로그인
* 메인 페이지
    * 관리자의 메인 페이지에 무엇을 출력할까요?
* 알림 확인
    * 정확히 관리자가 무슨 알림을 받는 페이지인가 .(DB)
    * 스타일 수정(후순위)
* 개인정보 관리
    * 비밀번호 수정은 어떻게 해야 할 지
    * 스타일 수정(후순위)
* 공지사항
    * 공지사항 작성, 수정, 확인(DB)
    * 스타일 수정(후순위)
* 출석 관리
    * 관리자가 무슨 출석 관리를?
    * 거의 빈 페이지임
* 사용자 관리
    * 사용자 관리에서 관리자의 역할은?
    * 관리자가 등록된 유저의 기본 정보 수정 기능?
    * 거의 빈 페이지임

로그인 페이지
- 로그인 LoginPage_textWrapper 부분 정렬(후순위)
- 로그인 버튼 수정(후순위)
- 비밀번호 찾기 구현(학번, 이름 일치 시 비밀번호 재설정)

——————————————————————————————————————————————————
요구사항 정리

	학생
1. 학생 로그인 : 학번, 비밀번호
2. 학생 로그아웃 : 사이드바 로그아웃 버튼
3. 학생 메인 페이지 : 현재 출석 현황, 총 출석 현황, 공지사항, 시간표 간단하게 표시
4. 학생 사이드바 : Attendance, Management, Administration 총 3개의 카테고리로 분류 Attendance - 출석 체크, 출석 보고서 확인, 알림 확인 Management - 개인정보 관리 Administration - 공지사항
5. 학생 출석체크 페이지 : 현재 수업, 오늘의 시간표, 출석 코드 입력
6. 학생 출석 보고서 확인 페이지 : 상세 출결 현황, 전체 출결 현황, 과목별 출결 현황
7. 학생 알림 확인 페이지 : 보낸 이, 제목, 상태, 날짜
8. 학생 개인정보 관리 페이지 : 이름(고정), 학번(고정), 이메일, 전화번호, 비밀번호 수정
9. 학생 공지사항 페이지 : 공지사항 확인, 열람 가능

	학부모
1. 학부모 로그인 : 자녀 학번 + 1, + 2, 비밀번호
2. 학부모 로그아웃 : 사이드바 로그아웃 버튼
3. 학부모 메인 페이지 : 자녀의 시간표, 공지사항 간단하게 출력
4. 학부모 사이드바 : Attendance, Management, Administration 총 3개의 카테고리로 분류 Attendance - 출석 보고서 확인, 알림 확인 Management - 개인정보 관리 Administration - 공지사항
5. 학부모 출석 보고서 확인 페이지 : 자녀의 출결 정보 확인
6. 학부모 알림 확인 페이지 : 보낸 이, 제목, 상태, 날짜
7. 학부모 개인정보 관리 페이지 : 이름(고정), 학번(고정), 이메일, 전화번호, 비밀번호 수정
8. 학부모 공지사항 페이지 : 공지사항 확인, 열람 가능

	교수
1. 교수 로그인 : 교수 사번, 비밀번호
2. 교수 로그아웃 : 사이드바 로그아웃 버튼
3. 교수 메인 페이지 : 공지사항, 교수 본인의 강의 시간표
4. 교수 사이드바 : Attendance, Management, Administration 총 3개의 카테고리로 분류 Attendance - 출석 보고서 작성, 알림 확인 Management - 개인정보 관리 Administration - 공지사항, 출석 관리
5. 교수 출석 보고서 작성 페이지 : 날짜, 과목명, 수업(출석) 코드 생성, 학생 출석 상태 확인
6. 교수 알림 확인 페이지 : 보낸 이, 제목, 상태, 날짜
7. 교수 개인정보 관리 페이지 : 이름(고정), 사번(고정), 이메일, 전화번호, 비밀번호 수정
8. 교수 공지사항 페이지 : 공지사항 작성, 수정, 확인, 열람 가능
9. 교수 출석 관리 페이지 : 

	관리자
1. 관리자 로그인 : 아이디, 비밀번호
2. 관리자 로그아웃 : 사이드바 로그아웃 버튼
3. 관리자 메인 페이지 : 
4. 관리자 사이드 바 : Attendance, Management, Administration 총 3개의 카테고리로 분류 Attendance - 알림 확인 Management - 개인정보 관리 Administration - 공지사항, 출석 관리, 사용자 관리
5. 관리자 알림 확인 페이지 : 보낸 이, 제목, 상태, 날짜
6. 관리자 개인정보 관리 페이지 : 이름(고정), 아이디(고정), 이메일, 전화번호, 비밀번호 수정
7. 관리자 공지사항 페이지 : 공지사항 작성, 수정, 확인, 열람 가능
8. 관리자 출석 관리 페이지 :
9. 관리자 사용자 관리 페이지 :

——————————————————————————————————————————————————
테이블 구조

1. users 테이블 (사용자 정보)
컬럼 이름	데이터 타입	속성	설명
id	INT	NOT NULL, PRIMARY KEY	사용자 ID (고유 식별자)
name	VARCHAR(100)	NOT NULL	사용자 이름
password	VARCHAR(255)	NOT NULL	비밀번호 (해시 저장 권장)
email	VARCHAR(100)	이메일 주소	
phone_number	VARCHAR(15)	전화번호	
created_at	DATETIME	DEFAULT CURRENT_TIMESTAMP	계정 생성 시간
role	ENUM(‘student’, ‘professor’, ‘admin’, ‘parent’)	NOT NULL, DEFAULT ‘student’	사용자 역할 (학생, 교수, 관리자 등)

2. Classes 테이블 (수업 정보)
컬럼 이름	데이터 타입	속성	설명
class_id	INT	AUTO_INCREMENT, PRIMARY KEY	수업 ID (고유 식별자)
class_name	VARCHAR(100)	NOT NULL	수업명
professor_id	INT	NOT NULL, FOREIGN KEY	담당 교수의 ID (users 테이블 참조)
semester	VARCHAR(20)	NOT NULL	학기
year	INT	NOT NULL	연도

3. Class_Students 테이블 (수업 수강생 관계)
컬럼 이름	데이터 타입	속성	설명
class_id	INT	PRIMARY KEY, FOREIGN KEY	수업 ID (Classes 테이블 참조)
student_id	INT	PRIMARY KEY, FOREIGN KEY	학생 ID (users 테이블 참조)

4. Class_Codes 테이블 (출석 코드 관리)
컬럼 이름	데이터 타입	속성	설명
code_id	INT	AUTO_INCREMENT, PRIMARY KEY	코드 ID
class_id	INT	NOT NULL, FOREIGN KEY	수업 ID (Classes 테이블 참조)
attendance_code	VARCHAR(10)	NOT NULL	출석 코드
generated_at	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP	코드 생성 시간
expired_at	TIMESTAMP	NOT NULL	코드 만료 시간
is_active	BOOLEAN	DEFAULT TRUE	활성 상태

5. Attendance 테이블 (출석 기록)
컬럼 이름	데이터 타입	속성	설명
attendance_id	INT	AUTO_INCREMENT, PRIMARY KEY	출석 기록 ID
class_id	INT	NOT NULL, FOREIGN KEY	수업 ID (Classes 테이블 참조)
student_id	INT	NOT NULL, FOREIGN KEY	학생 ID (users 테이블 참조)
code_id	INT	NOT NULL, FOREIGN KEY	코드 ID (Class_Codes 테이블 참조)
date	DATE	NOT NULL	출석 날짜
status	ENUM(‘present’, ‘late’, ‘absent’, ‘early_leave’)	NOT NULL	출석 상태
created_at	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP	출석 기록 생성 시간

6. Notifications 테이블 (알림 메시지)
컬럼 이름	데이터 타입	속성	설명
notification_id	INT	AUTO_INCREMENT, PRIMARY KEY	알림 ID
sender_id	INT	NOT NULL, FOREIGN KEY	발신자 ID (users 테이블 참조)
receiver_id	INT	NOT NULL, FOREIGN KEY	수신자 ID (users 테이블 참조)
title	VARCHAR(100)	NOT NULL	알림 제목
content	TEXT	알림 내용	
is_read	BOOLEAN	DEFAULT FALSE	읽음 여부
created_at	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP	알림 생성 시간

7. Announcements 테이블 (공지사항 관리)
컬럼 이름	데이터 타입	속성	설명
announcement_id	INT	AUTO_INCREMENT, PRIMARY KEY	공지사항 ID
title	VARCHAR(100)	NOT NULL	공지 제목
content	TEXT	공지 내용	
author_id	INT	NOT NULL, FOREIGN KEY	작성자 ID (users 테이블 참조)
created_at	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP	공지 생성 시간
updated_at	TIMESTAMP	DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP	공지 수정 시간

——————————————————————————————————————————————————
DML 작성 예시 
-- Users 데이터 추가
INSERT INTO Attendance.users (id, name, password, email, phone_number, role) VALUES
(2023100001, '관리자01', '0004', '2023100001@itc.ac.kr', '010-1111-0001', 'admin'),
(2023100002, '관리자02', '0004', '2023100002@itc.ac.kr', '010-1111-0002', 'admin'),

-- Users 테이블에 교수(professor) 데이터 추가
INSERT INTO Attendance.users (id, name, password, email, phone_number, role) VALUES
(2023200001, '김교수', '0004', '2023200001@itc.ac.kr', '010-2222-0001', 'professor'),
(2023200002, '이교수', '0004', '2023200002@itc.ac.kr', '010-2222-0002', 'professor'),

-- Users 테이블에 학생(student) 데이터 추가
INSERT INTO Attendance.users (id, name, password, email, phone_number, role) VALUES
(2023300001, '김학생', '0004', '2023300001@itc.ac.kr', '010-3333-0001', 'student'),
(2023300002, '이학생', '0004', '2023300002@itc.ac.kr', '010-3333-0002', 'student'),

-- Users 테이블에 학부모(parent) 데이터 추가
INSERT INTO Attendance.users (id, name, password, email, phone_number, role) VALUES
(2023400001, '김부모', '0004', '2023400001@itc.ac.kr', '010-4444-0001', 'parent'),
(2023400002, '이부모', '0004', '2023400002@itc.ac.kr', '010-4444-0002', 'parent'),

-- Classes 데이터 추가
INSERT INTO Classes (class_name, professor_id, semester, year) VALUES
('웹프로그래밍', 2023200001, '1', 2024),
('JAVA프로그래밍', 2023200002, '1', 2024),
('시스템분석설계', 2023200003, '1', 2024);

-- Class_Students 데이터 추가
INSERT INTO Class_Students (class_id, student_id) VALUES
(1, 2023300001),
(1, 2023300002),
(2, 2023300003),
(2, 2023300004),
(3, 2023300005);

-- Class_Codes 데이터 추가
INSERT INTO Class_Codes (class_id, attendance_code, expired_at) VALUES
(1, 'WEB001', DATE_ADD(NOW(), INTERVAL 1 HOUR)),
(2, 'JAVA001', DATE_ADD(NOW(), INTERVAL 1 HOUR)),
(3, 'SYS001', DATE_ADD(NOW(), INTERVAL 1 HOUR));

-- Attendance 데이터 추가
INSERT INTO Attendance (class_id, student_id, code_id, date, status) VALUES
(1, 2023300001, 1, CURDATE(), 'present'),
(1, 2023300002, 1, CURDATE(), 'late'),
(2, 2023300003, 2, CURDATE(), 'present'),
(2, 2023300004, 2, CURDATE(), 'absent');

-- Notifications 데이터 추가
INSERT INTO Notifications (sender_id, receiver_id, title, content) VALUES
(2023200001, 2023300001, '출석 경고', '출석률이 저조합니다.'),
(2023200002, 2023300003, '과제 제출 알림', '과제 제출 기한이 임박했습니다.'),
(2023100001, 2023300005, '시스템 공지', '시스템 점검 예정입니다.');

-- Announcements 데이터 추가
INSERT INTO Announcements (title, content, author_id) VALUES
('시스템 점검 안내', '11월 15일 오전 2시부터 4시까지 시스템 점검이 있을 예정입니다.', 2023100001),
('2024학년도 1학기 수강신청 안내', '수강신청 기간은 2024년 2월 1일부터 2월 7일까지입니다.', 2023100002),
('학생증 재발급 안내', '학생증 재발급은 학생지원센터에서 가능합니다.', 2023100003);

——————————————————————————————————————————————————
각 테이블 정보 요약

1. **users 테이블**
   - 사용자 정보 저장
   - 관리자/교수/학생/학부모 계정 관리
   - id, 이름, 비밀번호, 이메일, 전화번호, 역할 정보

2. **Classes 테이블**
   - 수업 정보 저장
   - 과목명, 담당 교수, 학기, 연도 정보
   - professor_id로 users 테이블의 교수와 연결

3. **Class_Students 테이블**
   - 수강생 정보 저장 (수업-학생 관계)
   - 어떤 학생이 어떤 수업을 수강하는지 연결
   - 다대다(N:M) 관계 테이블

4. **Attendance 테이블**
   - 출석 기록 저장
   - 수업별, 학생별 출석 상태 관리
   - 출석/지각/결석/조퇴 상태 기록
   - 날짜, 출석코드 정보

5. **Notifications 테이블**
   - 알림 메시지 저장
   - 발신자, 수신자, 제목, 내용
   - 읽음 여부 관리

6. **Announcements 테이블**
   - 공지사항 저장
   - 제목, 내용, 작성자
   - 작성일, 수정일 관리

테이블 간 관계:
- users ← Classes (교수가 수업 담당)
- users ↔ Class_Students ↔ Classes (학생이 수업 수강)
- Classes + users → Attendance (수업별 학생 출석)
- users → users (Notifications의 발신자/수신자)
- users → Announcements (공지사항 작성자)

——————————————————————————————————————————————————
